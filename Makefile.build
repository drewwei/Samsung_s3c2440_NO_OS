PHONY := __build
__build:


obj-y :=
subdir-y :=

include Makefile

CFLAGS += -I $(shell pwd)/include

# obj-y := a.o b.o c/ d/
# $(filter %/, $(obj-y))   : c/ d/
# patsubst %/,%, $(__subdir-y)  : c d  将/替换为空
# __subdir-y : c d
# subdir-y    : c d
__subdir-y	:= $(patsubst %/,%,$(filter %/, $(obj-y)))
subdir-y	+= $(__subdir-y)

# c/built-in.o d/built-in.o
subdir_objs := $(foreach f,$(subdir-y),$(f)/built-in.o)

# a.o b.o
# cur_objs : a.o b.o
# dep_files : a.o.d b.o.d
cur_objs := $(filter-out %/, $(obj-y))
_dep_files := $(foreach f,$(cur_objs),.$(f).d)
dep_files := $(wildcard $(_dep_files))

ifneq ($(dep_files),)
  include $(dep_files)
endif


PHONY += $(subdir-y)


__build : $(subdir-y) built-in.o

$(subdir-y):
	make -C $@ -f $(TOPDIR)/Makefile.build

built-in.o : $(cur_objs) $(subdir_objs)
	$(LD) -r -o $@ $^

dep_file = .$@.d

#-Wp,-MD,会生成相应的依赖文件,cat该文件可以看到依赖的.c和.h文件
%.o : %.c
	$(CC) $(CFLAGS) -Wp,-MD,$(dep_file) -c -o $@ $< 

%.o : %.S
	$(CC) $(CFLAGS) -Wp,-MD,$(dep_file) -c -o $@ $< 


.PHONY : $(PHONY)